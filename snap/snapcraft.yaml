name: condition-monitoring-app
base: core20
version: "1.3.1"
summary: IoT Machine Condition Monitoring App
description: |
    This app includes several IoT softwares bundled as a single snap.
    NodeRED, InfluxDB and Grafana all together and pre-configured, ready to use together
    with the whole ctrlX Automation ecosystem.

grade: stable
confinement: strict

architectures:
    - build-on: amd64
    - build-on: arm64

slots:
    package-assets:
        interface: content
        content: package-assets
        source:
            read:
                - $SNAP/package-assets/condition-monitoring-app

plugs:
    active-solution:
        interface: content
        content: solutions
        target: $SNAP_COMMON/solutions

    datalayer:
        interface: content
        content: datalayer
        target: $SNAP_DATA/.datalayer

hooks:
    connect-plug-active-solution:
        plugs: [active-solution]

apps:
    influx:
        command: usr/bin/influx
        plugs:
            - network
            - home
        slots:
            - package-assets

    influxd:
        command: bin/start-influxd
        daemon: simple
        restart-condition: always
        restart-delay: 15s
        plugs:
            - network
            - network-bind
            - active-solution
        slots:
            - package-assets

    grafana-server:
        command: bin/start-grafana
        daemon: simple
        restart-condition: always
        restart-delay: 15s
        plugs:
            - network
            - network-bind
            - active-solution
        slots:
            - package-assets

    node-red:
        command: bin/start-node-red
        daemon: simple
        restart-condition: always
        restart-delay: 15s
        plugs:
            - audio-playback
            - bluez
            - bluetooth-control
            - camera
            - network-bind
            - network
            - network-observe
            - pulseaudio
            - serial-port
            - removable-media
            - active-solution
        slots:
            - package-assets

parts:
    node:
        after: [node-red]
        plugin: dump
        source:
            - to amd64: https://nodejs.org/dist/v16.18.0/node-v16.18.0-linux-x64.tar.gz
            - to arm64: https://nodejs.org/dist/v16.18.0/node-v16.18.0-linux-arm64.tar.gz

    node-red:
        plugin: nil
        build-packages:
          - libatomic1
          - nodejs
        override-build: | # Whatever steps needed to install node-red into the install folder, which gets incorporated into the snap
            npm_args="--prefix $SNAPCRAFT_PART_INSTALL/lib --only=prod --production --no-fund --no-audit"

            npm config set unsafe-perm true
            npm cache verify

            npm $npm_args install node-red

            npm $npm_args install node-red-debugger
            npm $npm_args install nrlint
            npx nrlint --init > $SNAPCRAFT_PART_INSTALL/lib/.nrlintrc.js

            npm $npm_args install node-red-node-ping
            npm $npm_args install node-red-node-random
            npm $npm_args install node-red-node-serialport            
            npm $npm_args install node-red-dashboard 
            npm $npm_args install node-red-contrib-influxdb 
            npm $npm_args install node-red-contrib-ctrlx-automation
            npm $npm_args install node-red-contrib-modbus

            find $SNAPCRAFT_PART_INSTALL -type f -name '*.js.swp' -delete
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type d -name test -prune -exec rm -rf {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type d -name doc -prune -exec rm -rf {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type d -name example -prune -exec rm -rf {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type d -name sample -prune -exec rm -rf {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type d -iname benchmark* -prune -exec rm -rf {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type d -iname .nyc_output -prune -exec rm -rf {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type d -iname unpacked -prune -exec rm -rf {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type d -name man* -prune -exec rm -rf {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type d -name tst -prune -exec rm -rf {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type d -iname demo -prune -exec rm -rf {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type f -name bench.gnu -exec rm -f {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type f -name .npmignore -exec rm -f {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type f -name .travis.yml -exec rm -f {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type f -name .jshintrc -exec rm -f {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type f -iname README.md -exec rm -f {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type f -iname HISTORY.md -exec rm -f {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type f -iname CONTRIBUTING.md -exec rm -f {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type f -iname CHANGE*.md -exec rm -f {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type f -iname .gitmodules -exec rm -f {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type f -iname .gitattributes -exec rm -f {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type f -iname .gitignore -exec rm -f {} \;
            find $SNAPCRAFT_PART_INSTALL/lib/node_modules -type f -iname "*~" -exec rm -f {} \;

    influxdb:
        plugin: dump
        source:
            - to amd64: https://dl.influxdata.com/influxdb/releases/influxdb_1.8.10_amd64.deb
            - to arm64: https://dl.influxdata.com/influxdb/releases/influxdb_1.8.10_arm64.deb

    grafana:
        plugin: dump
        source:
            - to amd64: https://dl.grafana.com/oss/release/grafana_9.2.2_amd64.deb
            - to arm64: https://dl.grafana.com/oss/release/grafana_9.2.2_arm64.deb

    dump-config:
        plugin: dump
        source: ./config
        organize:
            "*": config/

    dump-scripts:
        plugin: dump
        source: ./scripts
        organize:
            "*": bin/

    package-assets:
        plugin: dump
        source: ./package-assets
        organize:
            "*": package-assets/
